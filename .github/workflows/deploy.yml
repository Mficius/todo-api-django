name: Deploy Django App

on:
  push:
    branches:
      - main
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
  
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Run SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@master
      with:
        projectBaseDir: .
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: Wait for SonarQube Quality Gate
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        echo "Waiting for SonarQube quality gate..."
        ceTaskUrl=$(cat .scannerwork/report-task.txt | grep ceTaskUrl | cut -d'=' -f2)
        echo "ceTaskUrl: $ceTaskUrl"

        # Polling the quality gate status
        status="PENDING"
        timeout=60
        count=0
        while [[ "$status" == "PENDING" || "$status" == "IN_PROGRESS" ]]; do
          sleep 5
          count=$((count + 1))
          if [ "$count" -gt "$timeout" ]; then
            echo "Timeout waiting for SonarQube quality gate"
            exit 1
          fi

          analysisId=$(curl -s -u $SONAR_TOKEN: $ceTaskUrl | jq -r .task.analysisId)
          qualityGateStatus=$(curl -s -u $SONAR_TOKEN: https://sonarcloud.io/api/qualitygates/project_status?analysisId=$analysisId | jq -r .projectStatus.status)
          echo "Current status: $qualityGateStatus"
          status=$qualityGateStatus
        done

        if [ "$status" != "OK" ]; then
          echo "❌ Quality Gate failed: $status"
          exit 1
        fi

        echo "✅ Quality Gate passed: $status"


    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/todo-api:latest .

    - name: Scan Docker Image with Docker Scout
      uses: docker/scout-action@v1
      with:
        image: ${{ secrets.DOCKER_USERNAME }}/todo-api:latest
        dockerhub-user: ${{ secrets.DOCKER_USERNAME }}
        dockerhub-password: ${{ secrets.DOCKER_PASSWORD }}
        command: cves

    - name: Push Docker Image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/todo-api:latest


    # - name: Deploy to VPS via SSH
    #   uses: appleboy/ssh-action@v1.0.0
    #   with:
    #     host: ${{ secrets.VPS_HOST }}
    #     username: ${{ secrets.VPS_USER }}
    #     key: ${{ secrets.VPS_SSH_KEY }}
    #     script: |
    #       bash /home/${{ secrets.VPS_USER }}/deploy_latest.sh
