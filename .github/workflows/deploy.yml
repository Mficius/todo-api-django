name: Deploy Django App

on:
  push:
    branches:
      - '**'

  pull_request:
     branches:
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest

    # services:
    #   postgres:
    #     image: postgres:15
    #     env:
    #       POSTGRES_DB: test_db
    #       POSTGRES_USER: test_user
    #       POSTGRES_PASSWORD: test_pass
    #     ports:
    #       - 5432:5432
    #     options: >-
    #       --health-cmd="pg_isready"
    #       --health-interval=10s
    #       --health-timeout=5s
    #       --health-retries=5

    # env:
    #   DATABASE_URL: postgres://test_user:test_pass@localhost:5432/test_db

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Pytest
      run: pytest

    - name: Run SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@master
      with:
        projectBaseDir: .
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}


  build:
    runs-on: ubuntu-latest
    needs: test  # Only runs if "test" job passed
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}


    - name: Build Docker Image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/todo-api:latest .

    - name: Scan Docker Image with Docker Scout
      uses: docker/scout-action@v1
      with:
        image: ${{ secrets.DOCKER_USERNAME }}/todo-api:latest
        dockerhub-user: ${{ secrets.DOCKER_USERNAME }}
        dockerhub-password: ${{ secrets.DOCKER_PASSWORD }}
        command: cves


    - name: Push Docker Image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/todo-api:latest




  # deploy:
  #     if: github.ref == 'refs/heads/main'
  #     runs-on: ubuntu-latest
  #     steps:
  #     - name: Deploy to VPS via SSH
  #       uses: appleboy/ssh-action@v1.0.0
  #       with:
  #         host: ${{ secrets.VPS_HOST }}
  #         username: ${{ secrets.VPS_USER }}
  #         key: ${{ secrets.VPS_SSH_KEY }}
  #         script: |
  #           bash /home/${{ secrets.VPS_USER }}/deploy_latest.sh
